{
  "version": 4,
  "terraform_version": "1.10.0",
  "serial": 541,
  "lineage": "12f567d4-6166-c5eb-c997-7c7d931d5212",
  "outputs": {},
  "resources": [
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "autoscaler_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "autoscaler_legacy_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "github_release",
      "name": "calico",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "github_release",
      "name": "hetzner_ccm",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "asserts_url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/187501177/assets",
            "assets": [
              {
                "browser_download_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.21.0/ccm-networks.yaml",
                "content_type": "application/x-yaml",
                "created_at": "2024-11-26 10:31:48 +0000 UTC",
                "id": 209149684,
                "label": "",
                "name": "ccm-networks.yaml",
                "node_id": "RA_kwDOBxR_Mc4Md170",
                "size": 3133,
                "updated_at": "2024-11-26 10:31:48 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/assets/209149684"
              },
              {
                "browser_download_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.21.0/ccm.yaml",
                "content_type": "application/x-yaml",
                "created_at": "2024-11-26 10:31:48 +0000 UTC",
                "id": 209149683,
                "label": "",
                "name": "ccm.yaml",
                "node_id": "RA_kwDOBxR_Mc4Md17z",
                "size": 2869,
                "updated_at": "2024-11-26 10:31:48 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/assets/209149683"
              },
              {
                "browser_download_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.21.0/hcloud-cloud-controller-manager-1.21.0.tgz",
                "content_type": "application/x-compressed-tar",
                "created_at": "2024-11-26 10:31:48 +0000 UTC",
                "id": 209149681,
                "label": "",
                "name": "hcloud-cloud-controller-manager-1.21.0.tgz",
                "node_id": "RA_kwDOBxR_Mc4Md17x",
                "size": 5350,
                "updated_at": "2024-11-26 10:31:48 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/assets/209149681"
              },
              {
                "browser_download_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.21.0/hcloud-cloud-controller-manager_1.21.0_checksums.txt",
                "content_type": "text/plain; charset=utf-8",
                "created_at": "2024-11-26 10:31:48 +0000 UTC",
                "id": 209149682,
                "label": "",
                "name": "hcloud-cloud-controller-manager_1.21.0_checksums.txt",
                "node_id": "RA_kwDOBxR_Mc4Md17y",
                "size": 372,
                "updated_at": "2024-11-26 10:31:48 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/assets/209149682"
              }
            ],
            "assets_url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/187501177/assets",
            "body": "### Feature Highlights \u0026amp; Upgrade Notes\n\n#### Load Balancer IPs set to Private IPs\n\nIf networking support is enabled, the load balancer IPs are now populated with the private IPs, unless the `load-balancer.hetzner.cloud/disable-private-ingress` annotation is set to `true`. Please make sure that you configured the annotation according to your needs, for example if you are using `external-dns`.\n\n#### Provided-By Label\n\nWe introduced a the label `instance.hetzner.cloud/provided-by`, which will be automatically added to all **new** nodes. This label can have the values `cloud` or `robot` to distinguish between our products. We use this label in the csi-driver to ensure the daemonset is only running on cloud nodes. We recommend to add this label to your existing nodes with the appropriate value.\n\n- `kubectl label node $CLOUD_NODE_NAME instance.hetzner.cloud/provided-by=cloud`\n- `kubectl label node $ROBOT_NODE_NAME instance.hetzner.cloud/provided-by=robot`\n\n#### Load Balancer IPMode Proxy\n\nKubernetes KEP-1860 added a new field to the Load Balancer Service Status that allows us to mark if the IP address we add should be considered as a Proxy (always send traffic here) and VIP (allow optimization by keeping the traffic in the cluster).\n\nPreviously Kubernetes considered all IPs as VIP, which caused issues when when the PROXY protocol was in use. We have previously recommended to use the annotation `load-balancer.hetzner.cloud/hostname` to workaround this problem.\n\nWe now set the new field to `Proxy` if the PROXY protocol is active so the issue should no longer appear. If you  only added the `load-balancer.hetzner.cloud/hostname` annotation for this problem, you can remove it after upgrading.\n\nFurther information:\n\n- https://github.com/kubernetes/enhancements/issues/1860\n- https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/160#issuecomment-788638132\n\n### Features\n\n- **service**: Specify private ip for loadbalancer (#724)\n- add support \u0026amp; tests for Kubernetes 1.31 (#747)\n- **helm**: allow setting extra pod volumes via chart values  (#744)\n- **instance**: add label to distinguish servers from Cloud and Robot (#764)\n- emit event when robot server name and node name mismatch (#773)\n- **load-balancer**: Set IPMode to \u0026#34;Proxy\u0026#34; if load balancer is configured to use proxy protocol (#727) (#783)\n- **routes**: emit warning if cluster cidr is misconfigured (#793)\n- **load-balancer**: ignore nodes that don\u0026#39;t use known provider IDs (#780)\n- drop tests for kubernetes v1.27 and v1.28\n\n### Bug Fixes\n\n- populate ingress private ip when disable-private-ingress is false (#715)\n- wrong version logged on startup (#729)\n- invalid characters in label instance-type of robot servers (#770)\n- no events are emitted as broadcaster has no sink configured (#774)\n\n### Kubernetes Support\n\nThis version was tested with Kubernetes 1.29 - 1.31. Furthermore, we dropped v1.27 and v1.28 support.\n",
            "created_at": "2024-11-26 10:26:15 +0000 UTC",
            "draft": false,
            "html_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/tag/v1.21.0",
            "id": "187501177",
            "name": "v1.21.0",
            "owner": "hetznercloud",
            "prerelease": false,
            "published_at": "2024-11-26 10:26:51 +0000 UTC",
            "release_id": null,
            "release_tag": "v1.21.0",
            "repository": "hcloud-cloud-controller-manager",
            "retrieve_by": "latest",
            "tarball_url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/tarball/v1.21.0",
            "target_commitish": "23167695206461143c07a29288f2c6812133c5f4",
            "upload_url": "https://uploads.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/187501177/assets{?name,label}",
            "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/187501177",
            "zipball_url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/zipball/v1.21.0"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "github_release",
      "name": "hetzner_csi",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "asserts_url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/187506791/assets",
            "assets": [
              {
                "browser_download_url": "https://github.com/hetznercloud/csi-driver/releases/download/v2.11.0/csi-driver_2.11.0_checksums.txt",
                "content_type": "text/plain; charset=utf-8",
                "created_at": "2024-11-26 11:03:34 +0000 UTC",
                "id": 209155062,
                "label": "",
                "name": "csi-driver_2.11.0_checksums.txt",
                "node_id": "RA_kwDOCa6nks4Md3P2",
                "size": 309,
                "updated_at": "2024-11-26 11:03:35 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/assets/209155062"
              },
              {
                "browser_download_url": "https://github.com/hetznercloud/csi-driver/releases/download/v2.11.0/hcloud-csi-2.11.0.tgz",
                "content_type": "application/x-compressed-tar",
                "created_at": "2024-11-26 11:03:35 +0000 UTC",
                "id": 209155063,
                "label": "",
                "name": "hcloud-csi-2.11.0.tgz",
                "node_id": "RA_kwDOCa6nks4Md3P3",
                "size": 13290,
                "updated_at": "2024-11-26 11:03:35 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/assets/209155063"
              }
            ],
            "assets_url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/187506791/assets",
            "body": "### Features\n\n- Added new option enableProvidedByTopology (#780)\n- drop tests for kubernetes v1.28 (#796)\n\n### Bug Fixes\n\n- prefer scheduling the csi controller on cloud nodes (#786)\n\n### Kubernetes Support\n\nThis version was tested with Kubernetes 1.29 - 1.31. Furthermore, we dropped v1.28 support.\n",
            "created_at": "2024-11-26 10:55:33 +0000 UTC",
            "draft": false,
            "html_url": "https://github.com/hetznercloud/csi-driver/releases/tag/v2.11.0",
            "id": "187506791",
            "name": "v2.11.0",
            "owner": "hetznercloud",
            "prerelease": false,
            "published_at": "2024-11-26 10:56:19 +0000 UTC",
            "release_id": null,
            "release_tag": "v2.11.0",
            "repository": "csi-driver",
            "retrieve_by": "latest",
            "tarball_url": "https://api.github.com/repos/hetznercloud/csi-driver/tarball/v2.11.0",
            "target_commitish": "afa8768d32a461bd39fdbb091bbbfa24be5441f8",
            "upload_url": "https://uploads.github.com/repos/hetznercloud/csi-driver/releases/187506791/assets{?name,label}",
            "url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/187506791",
            "zipball_url": "https://api.github.com/repos/hetznercloud/csi-driver/zipball/v2.11.0"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "github_release",
      "name": "kured",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "asserts_url": "https://api.github.com/repos/kubereboot/kured/releases/184242094/assets",
            "assets": [
              {
                "browser_download_url": "https://github.com/kubereboot/kured/releases/download/1.16.2/kured-1.16.2-dockerhub.yaml",
                "content_type": "application/yaml",
                "created_at": "2024-11-07 21:11:00 +0000 UTC",
                "id": 204886567,
                "label": "",
                "name": "kured-1.16.2-dockerhub.yaml",
                "node_id": "RA_kwDOBUgOWc4MNlIn",
                "size": 5021,
                "updated_at": "2024-11-07 21:11:01 +0000 UTC",
                "url": "https://api.github.com/repos/kubereboot/kured/releases/assets/204886567"
              }
            ],
            "assets_url": "https://api.github.com/repos/kubereboot/kured/releases/184242094/assets",
            "body": "## What's Changed\r\n* Improve release documentation by @evrardjp in https://github.com/kubereboot/kured/pull/1002\r\n* Clarify features for e2e test by @evrardjp in https://github.com/kubereboot/kured/pull/995\r\n* Cleanup dockerfile by @evrardjp in https://github.com/kubereboot/kured/pull/996\r\n* build(deps): bump github.com/prometheus/common from 0.60.0 to 0.60.1 by @dependabot in https://github.com/kubereboot/kured/pull/1003\r\n* Cleanup Part 1 - First refactors by @evrardjp in https://github.com/kubereboot/kured/pull/990\r\n* Cleanup gomod by @evrardjp in https://github.com/kubereboot/kured/pull/997\r\n* Update email address for Hidde Beydals by @hiddeco in https://github.com/kubereboot/kured/pull/1009\r\n* Remove security exception by @evrardjp in https://github.com/kubereboot/kured/pull/1005\r\n* Be explicit about toolchain version by @evrardjp in https://github.com/kubereboot/kured/pull/1006\r\n* Create scorecard.yml by @evrardjp in https://github.com/kubereboot/kured/pull/1007\r\n* build(deps): bump actions/upload-artifact from 97a0fba1372883ab732affbe8f94b823f91727db to c24449f33cd45d4826c6702db7e49f7cdb9b551d by @dependabot in https://github.com/kubereboot/kured/pull/1010\r\n* build(deps): bump ossf/scorecard-action from 2.3.1 to 2.4.0 by @dependabot in https://github.com/kubereboot/kured/pull/1011\r\n* build(deps): bump actions/upload-artifact from 3.2.1.pre.node20 to 4.4.3 by @dependabot in https://github.com/kubereboot/kured/pull/1012\r\n* bootstrap-tools are required for kured bin by @evrardjp in https://github.com/kubereboot/kured/pull/1014\r\n* Fix goroutine leak by @evrardjp in https://github.com/kubereboot/kured/pull/1015\r\n* Cleanup blockCheckers by @evrardjp in https://github.com/kubereboot/kured/pull/1016\r\n* build(deps): bump lycheeverse/lychee-action from 2.0.2 to 2.1.0 by @dependabot in https://github.com/kubereboot/kured/pull/1018\r\n* chore: update release by @evrardjp in https://github.com/kubereboot/kured/pull/1019\r\n\r\n\r\n**Full Changelog**: https://github.com/kubereboot/kured/compare/1.16.1...1.16.2",
            "created_at": "2024-11-07 21:03:43 +0000 UTC",
            "draft": false,
            "html_url": "https://github.com/kubereboot/kured/releases/tag/1.16.2",
            "id": "184242094",
            "name": "Kured 1.16.2",
            "owner": "kubereboot",
            "prerelease": false,
            "published_at": "2024-11-07 21:11:12 +0000 UTC",
            "release_id": null,
            "release_tag": "1.16.2",
            "repository": "kured",
            "retrieve_by": "latest",
            "tarball_url": "https://api.github.com/repos/kubereboot/kured/tarball/1.16.2",
            "target_commitish": "main",
            "upload_url": "https://uploads.github.com/repos/kubereboot/kured/releases/184242094/assets{?name,label}",
            "url": "https://api.github.com/repos/kubereboot/kured/releases/184242094",
            "zipball_url": "https://api.github.com/repos/kubereboot/kured/zipball/1.16.2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_image",
      "name": "microos_arm_snapshot",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "arm",
            "created": "2024-12-04T10:14:56Z",
            "deprecated": null,
            "description": "OpenSUSE MicroOS ARM by Kube-Hetzner",
            "id": 203041337,
            "include_deprecated": false,
            "labels": {
              "creator": "kube-hetzner",
              "microos-snapshot": "yes"
            },
            "most_recent": true,
            "name": "",
            "os_flavor": "ubuntu",
            "os_version": "",
            "rapid_deploy": false,
            "selector": null,
            "type": "snapshot",
            "with_architecture": "arm",
            "with_selector": "microos-snapshot=yes",
            "with_status": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_image",
      "name": "microos_x86_snapshot",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86",
            "created": "2024-12-04T10:15:51Z",
            "deprecated": null,
            "description": "OpenSUSE MicroOS x86 by Kube-Hetzner",
            "id": 203041546,
            "include_deprecated": false,
            "labels": {
              "creator": "kube-hetzner",
              "microos-snapshot": "yes"
            },
            "most_recent": true,
            "name": "",
            "os_flavor": "ubuntu",
            "os_version": "",
            "rapid_deploy": false,
            "selector": null,
            "type": "snapshot",
            "with_architecture": "x86",
            "with_selector": "microos-snapshot=yes",
            "with_status": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_network",
      "name": "k3s",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "delete_protection": false,
            "expose_routes_to_vswitch": false,
            "id": 10424340,
            "ip_range": "10.0.0.0/8",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "most_recent": null,
            "name": "k3s",
            "with_selector": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_servers",
      "name": "autoscaled_nodes",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_ssh_keys",
      "name": "keys_by_selector",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_firewall",
      "name": "k3s",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "apply_to": [],
            "id": "1777551",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s",
            "rule": [
              {
                "description": "Allow Incoming ICMP Ping Requests",
                "destination_ips": [],
                "direction": "in",
                "port": "",
                "protocol": "icmp",
                "source_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ]
              },
              {
                "description": "Allow Incoming Requests to Kube API Server",
                "destination_ips": [],
                "direction": "in",
                "port": "6443",
                "protocol": "tcp",
                "source_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ]
              },
              {
                "description": "Allow Incoming SSH Traffic",
                "destination_ips": [],
                "direction": "in",
                "port": "22",
                "protocol": "tcp",
                "source_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ]
              },
              {
                "description": "Allow Outbound HTTP Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "80",
                "protocol": "tcp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound HTTPS Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "443",
                "protocol": "tcp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound ICMP Ping Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "",
                "protocol": "icmp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound TCP DNS Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "53",
                "protocol": "tcp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound UDP DNS Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "53",
                "protocol": "udp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound UDP NTP Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "123",
                "protocol": "udp",
                "source_ips": []
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_floating_ip",
      "name": "agents",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": "1-0-egress",
          "schema_version": 0,
          "attributes": {
            "delete_protection": false,
            "description": "",
            "home_location": "fsn1",
            "id": "76222901",
            "ip_address": "49.12.118.212",
            "ip_network": null,
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "floating_ip-76222901",
            "server_id": null,
            "type": "ipv4"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_load_balancer",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "algorithm": [
              {
                "type": "round_robin"
              }
            ],
            "delete_protection": false,
            "id": "2202814",
            "ipv4": "128.140.30.164",
            "ipv6": "2a01:4f8:c01e:1d6::1",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "load_balancer_type": "lb11",
            "location": "fsn1",
            "name": "k3s-traefik",
            "network_id": null,
            "network_ip": null,
            "network_zone": "eu-central",
            "target": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_load_balancer",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_load_balancer_network",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_load_balancer_service",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_load_balancer_target",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_network",
      "name": "k3s",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "delete_protection": false,
            "expose_routes_to_vswitch": false,
            "id": "10424340",
            "ip_range": "10.0.0.0/8",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_network_subnet",
      "name": "agent",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway": "10.0.0.1",
            "id": "10424340-10.0.0.0/16",
            "ip_range": "10.0.0.0/16",
            "network_id": 10424340,
            "network_zone": "eu-central",
            "type": "cloud",
            "vswitch_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway": "10.0.0.1",
            "id": "10424340-10.1.0.0/16",
            "ip_range": "10.1.0.0/16",
            "network_id": 10424340,
            "network_zone": "eu-central",
            "type": "cloud",
            "vswitch_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_network_subnet",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway": "10.0.0.1",
            "id": "10424340-10.255.0.0/16",
            "ip_range": "10.255.0.0/16",
            "network_id": 10424340,
            "network_zone": "eu-central",
            "type": "cloud",
            "vswitch_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway": "10.0.0.1",
            "id": "10424340-10.254.0.0/16",
            "ip_range": "10.254.0.0/16",
            "network_id": 10424340,
            "network_zone": "eu-central",
            "type": "cloud",
            "vswitch_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway": "10.0.0.1",
            "id": "10424340-10.253.0.0/16",
            "ip_range": "10.253.0.0/16",
            "network_id": 10424340,
            "network_zone": "eu-central",
            "type": "cloud",
            "vswitch_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_placement_group",
      "name": "agent",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "431708",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s-agent-1",
            "servers": [],
            "type": "spread"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_placement_group",
      "name": "agent_named",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_placement_group",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "431709",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s-control-plane-1",
            "servers": [],
            "type": "spread"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_placement_group",
      "name": "control_plane_named",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_ssh_key",
      "name": "k3s",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "fingerprint": "d1:b6:ab:e1:40:b9:b1:56:f3:8a:7e:b7:6a:1b:2a:df",
            "id": "25242636",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s",
            "public_key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH+s5Hje+Syr9YhpNiNwCr8NRSye+RchupieCVw+BOW8 mohitlakshya@gmail.com\n"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_volume",
      "name": "longhorn_volume",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "cert_manager_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "cilium_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "csi_driver_smb_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "haproxy_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "kustomization_backup",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"kustomize.config.k8s.io/v1beta1\"\n\"kind\": \"Kustomization\"\n\"patches\":\n- \"patch\": |\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: system-upgrade-controller\n      namespace: system-upgrade\n    spec:\n      template:\n        spec:\n          containers:\n            - name: system-upgrade-controller\n              volumeMounts:\n                - name: ca-certificates\n                  mountPath: /var/lib/ca-certificates\n          volumes:\n            - name: ca-certificates\n              hostPath:\n                path: /var/lib/ca-certificates\n                type: Directory\n  \"target\":\n    \"group\": \"apps\"\n    \"kind\": \"Deployment\"\n    \"name\": \"system-upgrade-controller\"\n    \"namespace\": \"system-upgrade\"\n    \"version\": \"v1\"\n- \"path\": \"kured.yaml\"\n- \"path\": \"ccm.yaml\"\n\"resources\":\n- \"https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.21.0/ccm-networks.yaml\"\n- \"https://github.com/kubereboot/kured/releases/download/1.16.2/kured-1.16.2-dockerhub.yaml\"\n- \"https://github.com/rancher/system-upgrade-controller/releases/download/v0.14.2/system-upgrade-controller.yaml\"\n- \"https://github.com/rancher/system-upgrade-controller/releases/download/v0.14.2/crd.yaml\"\n- \"hcloud-csi.yaml\"\n- \"traefik_ingress.yaml\"\n- \"cert_manager.yaml\"\n",
            "content_base64": null,
            "content_base64sha256": "Wser8BsFDmhFJ1xoHWLYUN6/u079DkQCbCRhgerrrIw=",
            "content_base64sha512": "PgVzM1+OicQwgc6CjDpsDGUR/t9wmgwE4SIS+uVFIDj6UgEhX7L1CKwp4A4WKYsi/JFTWVGnU14xIqDO+yK92A==",
            "content_md5": "5eeee3e142dfa01124e9707c581110fb",
            "content_sha1": "90de2c3f82e9c944ab6274876aba2a3acdb33780",
            "content_sha256": "5ac7abf01b050e6845275c681d62d850debfbb4efd0e44026c246181eaebac8c",
            "content_sha512": "3e0573335f8e89c43081ce828c3a6c0c6511fedf709a0c04e12212fae5452038fa5201215fb2f508ac29e00e16298b22fc91535951a7535e3122a0cefb22bdd8",
            "directory_permission": "0777",
            "file_permission": "600",
            "filename": "k3s_kustomization_backup.yaml",
            "id": "90de2c3f82e9c944ab6274876aba2a3acdb33780",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ],
          "dependencies": [
            "module.kube-hetzner.data.github_release.calico",
            "module.kube-hetzner.data.github_release.hetzner_ccm",
            "module.kube-hetzner.data.github_release.kured"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "longhorn_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "nginx_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "traefik_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "null_resource",
      "name": "agent_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": "0-0-agent-small",
          "schema_version": 0,
          "attributes": {
            "id": "2959940387206548810",
            "triggers": {
              "agent_id": "57181513",
              "config": "66ba8416eaee2d07202a16fe00b94718f03cec35"
            }
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "triggers"
              },
              {
                "type": "index",
                "value": {
                  "value": "config",
                  "type": "string"
                }
              }
            ]
          ],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_load_balancer.control_plane",
            "module.kube-hetzner.hcloud_load_balancer_network.control_plane",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.hcloud_rdns.server",
            "module.kube-hetzner.module.agents.hcloud_server.server",
            "module.kube-hetzner.module.agents.hcloud_server_network.server",
            "module.kube-hetzner.module.agents.null_resource.registries",
            "module.kube-hetzner.module.agents.null_resource.zram",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_rdns.server",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.hcloud_server_network.server",
            "module.kube-hetzner.module.control_planes.null_resource.registries",
            "module.kube-hetzner.module.control_planes.null_resource.zram",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server",
            "module.kube-hetzner.random_password.k3s_token"
          ]
        },
        {
          "index_key": "1-0-egress",
          "schema_version": 0,
          "attributes": {
            "id": "8621767986002628128",
            "triggers": {
              "agent_id": "57181515",
              "config": "a8926e90086da700a8ea3a07c220ac4e110187ee"
            }
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "triggers"
              },
              {
                "type": "index",
                "value": {
                  "value": "config",
                  "type": "string"
                }
              }
            ]
          ],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_load_balancer.control_plane",
            "module.kube-hetzner.hcloud_load_balancer_network.control_plane",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.hcloud_rdns.server",
            "module.kube-hetzner.module.agents.hcloud_server.server",
            "module.kube-hetzner.module.agents.hcloud_server_network.server",
            "module.kube-hetzner.module.agents.null_resource.registries",
            "module.kube-hetzner.module.agents.null_resource.zram",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_rdns.server",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.hcloud_server_network.server",
            "module.kube-hetzner.module.control_planes.null_resource.registries",
            "module.kube-hetzner.module.control_planes.null_resource.zram",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server",
            "module.kube-hetzner.random_password.k3s_token"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "null_resource",
      "name": "autoscaled_nodes_registries",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "null_resource",
      "name": "configure_longhorn_volume",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "null_resource",
      "name": "first_control_plane",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "id": "2144591152851511882",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_load_balancer.control_plane",
            "module.kube-hetzner.hcloud_load_balancer_network.control_plane",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_rdns.server",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.hcloud_server_network.server",
            "module.kube-hetzner.module.control_planes.null_resource.registries",
            "module.kube-hetzner.module.control_planes.null_resource.zram",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server",
            "module.kube-hetzner.random_password.k3s_token"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "random_password",
      "name": "k3s_token",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$4CqaJG21W5tiD1.ZX9BhHumYmzSfDZU2YeBW8gsKtoYxMXRNvVImW",
            "id": "none",
            "keepers": null,
            "length": 48,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "qoxTEvYWHeI9pzbhCcLpIQqOH53ijtvoaKeVWHkdjPGbn2LH",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "random_password",
      "name": "rancher_bootstrap",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$fLcRmcBC6BrURcVZ2d5Ymu0XbPfa1kLpKiWZ8FgtVQoU03LJHufHu",
            "id": "none",
            "keepers": null,
            "length": 48,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "8yO9yhlwyNshyLe5xRGL39adGDiGUJpkOLWD8ywsUFENUWF9",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "boundary": "MIMEBOUNDARY",
            "gzip": true,
            "id": "3903795476",
            "part": [
              {
                "content": "#cloud-config\n\ndebug: True\n\nwrite_files:\n\n# Script to rename the private interface to eth1 and unify NetworkManager connection naming\n- path: /etc/cloud/rename_interface.sh\n  content: |\n    #!/bin/bash\n    set -euo pipefail\n\n    sleep 11\n\n    INTERFACE=$(ip link show | awk '/^3:/{print $2}' | sed 's/://g')\n    MAC=$(cat /sys/class/net/$INTERFACE/address)\n\n    cat \u003c\u003cEOF \u003e /etc/udev/rules.d/70-persistent-net.rules\n    SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"$MAC\", NAME=\"eth1\"\n    EOF\n\n    ip link set $INTERFACE down\n    ip link set $INTERFACE name eth1\n    ip link set eth1 up\n\n    eth0_connection=$(nmcli -g GENERAL.CONNECTION device show eth0)\n    nmcli connection modify \"$eth0_connection\" \\\n      con-name eth0 \\\n      connection.interface-name eth0\n\n    eth1_connection=$(nmcli -g GENERAL.CONNECTION device show eth1)\n    nmcli connection modify \"$eth1_connection\" \\\n      con-name eth1 \\\n      connection.interface-name eth1\n\n    systemctl restart NetworkManager\n  permissions: \"0744\"\n\n# Disable ssh password authentication\n- content: |\n    Port 22\n    PasswordAuthentication no\n    X11Forwarding no\n    MaxAuthTries 2\n    AllowTcpForwarding no\n    AllowAgentForwarding no\n    AuthorizedKeysFile .ssh/authorized_keys\n  path: /etc/ssh/sshd_config.d/kube-hetzner.conf\n\n# Set reboot method as \"kured\"\n- content: |\n    REBOOT_METHOD=kured\n  path: /etc/transactional-update.conf\n\n# Create Rancher repo config\n- content: |\n    [rancher-k3s-common-stable]\n    name=Rancher K3s Common (stable)\n    baseurl=https://rpm.rancher.io/k3s/stable/common/microos/noarch\n    enabled=1\n    gpgcheck=1\n    repo_gpgcheck=0\n    gpgkey=https://rpm.rancher.io/public.key\n  path: /etc/zypp/repos.d/rancher-k3s-common.repo\n\n# Create the kube_hetzner_selinux.te file, that allows in SELinux to not interfere with various needed services\n- path: /root/kube_hetzner_selinux.te\n  content: |\n    module kube_hetzner_selinux 1.0;\n\n    require {\n        type kernel_t, bin_t, kernel_generic_helper_t, iscsid_t, iscsid_exec_t, var_run_t, var_lib_t,\n            init_t, unlabeled_t, systemd_logind_t, systemd_hostnamed_t, container_t,\n            cert_t, container_var_lib_t, etc_t, usr_t, container_file_t, container_log_t,\n            container_share_t, container_runtime_exec_t, container_runtime_t, var_log_t, proc_t, io_uring_t, fuse_device_t, http_port_t,\n            container_var_run_t;\n        class key { read view };\n        class file { open read execute execute_no_trans create link lock rename write append setattr unlink getattr watch };\n        class sock_file { watch write create unlink };\n        class unix_dgram_socket create;\n        class unix_stream_socket { connectto read write };\n        class dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write watch };\n        class lnk_file { read create };\n        class system module_request;\n        class filesystem associate;\n        class bpf map_create;\n        class io_uring sqpoll;\n        class anon_inode { create map read write };\n        class tcp_socket name_connect;\n        class chr_file { open read write };\n    }\n\n    #============= kernel_generic_helper_t ==============\n    allow kernel_generic_helper_t bin_t:file execute_no_trans;\n    allow kernel_generic_helper_t kernel_t:key { read view };\n    allow kernel_generic_helper_t self:unix_dgram_socket create;\n\n    #============= iscsid_t ==============\n    allow iscsid_t iscsid_exec_t:file execute;\n    allow iscsid_t var_run_t:sock_file write;\n    allow iscsid_t var_run_t:unix_stream_socket connectto;\n\n    #============= init_t ==============\n    allow init_t unlabeled_t:dir { add_name remove_name rmdir search };\n    allow init_t unlabeled_t:lnk_file create;\n    allow init_t container_t:file { open read };\n    allow init_t container_file_t:file { execute execute_no_trans };\n    allow init_t fuse_device_t:chr_file { open read write };\n    allow init_t http_port_t:tcp_socket name_connect;\n\n    #============= systemd_logind_t ==============\n    allow systemd_logind_t unlabeled_t:dir search;\n\n    #============= systemd_hostnamed_t ==============\n    allow systemd_hostnamed_t unlabeled_t:dir search;\n\n    #============= container_t ==============\n    allow container_t { cert_t container_log_t }:dir read;\n    allow container_t { cert_t container_log_t }:lnk_file read;\n    allow container_t cert_t:file { read open };\n    allow container_t container_var_lib_t:file { create open read write rename lock setattr getattr unlink };\n    allow container_t etc_t:dir { add_name remove_name write create setattr watch };\n    allow container_t etc_t:file { create setattr unlink write };\n    allow container_t etc_t:sock_file { create unlink };\n    allow container_t usr_t:dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write };\n    allow container_t usr_t:file { append create execute getattr link lock read rename setattr unlink write };\n    allow container_t container_file_t:file { open read write append getattr setattr lock };\n    allow container_t container_file_t:sock_file watch;\n    allow container_t container_log_t:file { open read write append getattr setattr watch };\n    allow container_t container_share_t:dir { read write add_name remove_name };\n    allow container_t container_share_t:file { read write create unlink };\n    allow container_t container_runtime_exec_t:file { read execute execute_no_trans open };\n    allow container_t container_runtime_t:unix_stream_socket { connectto read write };\n    allow container_t kernel_t:system module_request;\n    allow container_t var_log_t:dir { add_name write remove_name watch read };\n    allow container_t var_log_t:file { create lock open read setattr write unlink getattr };\n    allow container_t var_lib_t:dir { add_name write read };\n    allow container_t var_lib_t:file { create lock open read setattr write getattr };\n    allow container_t proc_t:filesystem associate;\n    allow container_t self:bpf map_create;\n    allow container_t self:io_uring sqpoll;\n    allow container_t io_uring_t:anon_inode { create map read write };\n    allow container_t container_var_run_t:dir { add_name remove_name write };\n    allow container_t container_var_run_t:file { create open read rename unlink write };\n\n# Create the k3s registries file if needed\n\n# Create k3s registries file\n- content: IA==\n  encoding: base64\n  path: /etc/rancher/k3s/registries.yaml\n\n\n# Apply new DNS config\n\n# Set prepare for manual dns config\n- content: |\n    [main]\n    dns=none\n  path: /etc/NetworkManager/conf.d/dns.conf\n\n- content: |\n        nameserver 1.1.1.1\n        nameserver 8.8.8.8\n        nameserver 2606:4700:4700::1111\n    \n  path: /etc/resolv.conf\n  permissions: '0644'\n\n\n\n# Add ssh authorized keys\nssh_authorized_keys:\n  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH+s5Hje+Syr9YhpNiNwCr8NRSye+RchupieCVw+BOW8 mohitlakshya@gmail.com\n\n\n# Resize /var, not /, as that's the last partition in MicroOS image.\ngrowpart:\n    devices: [\"/var\"]\n\n# Make sure the hostname is set correctly\nhostname: k3s-agent-small-osb\npreserve_hostname: true\n\nruncmd:\n\n# ensure that /var uses full available disk size, thanks to btrfs this is easy\n- [btrfs, 'filesystem', 'resize', 'max', '/var']\n\n# SELinux permission for the SSH alternative port\n\n\n# Create and apply the necessary SELinux module for kube-hetzner\n- [checkmodule, '-M', '-m', '-o', '/root/kube_hetzner_selinux.mod', '/root/kube_hetzner_selinux.te']\n- ['semodule_package', '-o', '/root/kube_hetzner_selinux.pp', '-m', '/root/kube_hetzner_selinux.mod']\n- [semodule, '-i', '/root/kube_hetzner_selinux.pp']\n- [setsebool, '-P', 'virt_use_samba', '1']\n- [setsebool, '-P', 'domain_kernel_load_modules', '1']\n\n# Disable rebootmgr service as we use kured instead\n- [systemctl, disable, '--now', 'rebootmgr.service']\n\n\n# Set the dns manually\n- [systemctl, 'reload', 'NetworkManager']\n\n\n# Bounds the amount of logs that can survive on the system\n- [sed, '-i', 's/#SystemMaxUse=/SystemMaxUse=3G/g', /etc/systemd/journald.conf]\n- [sed, '-i', 's/#MaxRetentionSec=/MaxRetentionSec=1week/g', /etc/systemd/journald.conf]\n\n# Reduces the default number of snapshots from 2-10 number limit, to 4 and from 4-10 number limit important, to 2\n- [sed, '-i', 's/NUMBER_LIMIT=\"2-10\"/NUMBER_LIMIT=\"4\"/g', /etc/snapper/configs/root]\n- [sed, '-i', 's/NUMBER_LIMIT_IMPORTANT=\"4-10\"/NUMBER_LIMIT_IMPORTANT=\"3\"/g', /etc/snapper/configs/root]\n\n# Allow network interface\n- [chmod, '+x', '/etc/cloud/rename_interface.sh']\n\n# Restart the sshd service to apply the new config\n- [systemctl, 'restart', 'sshd']\n\n# Make sure the network is up\n- [systemctl, restart, NetworkManager]\n- [systemctl, status, NetworkManager]\n- [ip, route, add, default, via, '172.31.1.1', dev, 'eth0']\n\n# Cleanup some logs\n- [truncate, '-s', '0', '/var/log/audit/audit.log']\n\n\n",
                "content_type": "text/cloud-config",
                "filename": "init.cfg",
                "merge_type": null
              }
            ],
            "rendered": "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"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "hcloud_rdns",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "hcloud_server",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [
              1777551
            ],
            "id": "57181513",
            "ignore_remote_firewall_ids": false,
            "image": "203041546",
            "ipv4_address": "188.245.167.42",
            "ipv6_address": "2a01:4f8:c012:bec6::1",
            "ipv6_network": "2a01:4f8:c012:bec6::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform",
              "role": "agent_node"
            },
            "location": "fsn1",
            "name": "k3s-agent-small-osb",
            "network": [],
            "placement_group_id": 431708,
            "primary_disk_size": 40,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx22",
            "shutdown_before_deletion": false,
            "ssh_keys": [
              "25242636"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "OU5G5P/k2KcqKqcsb4jZ1fVdZFg="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "hcloud_server_network",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alias_ips": null,
            "id": "57181513-10424340",
            "ip": "10.0.0.101",
            "mac_address": "86:00:00:e6:c2:04",
            "network_id": null,
            "server_id": 57181513,
            "subnet_id": "10424340-10.0.0.0/16"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.hcloud_server.server",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "registries",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7177815106859717471",
            "triggers": {
              "registries": " "
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.hcloud_server.server",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "zram",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4151221005196060207",
            "triggers": {
              "zram_size": ""
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.hcloud_server.server",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "identity_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "0at78luqypb6t006jrmc",
            "keepers": null,
            "length": 20,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "0at78luqypb6t006jrmc",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "osb",
            "keepers": {
              "name": "k3s-agent-small"
            },
            "length": 3,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": false,
            "numeric": false,
            "override_special": null,
            "result": "osb",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"1-0-egress\"]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "boundary": "MIMEBOUNDARY",
            "gzip": true,
            "id": "3659051527",
            "part": [
              {
                "content": "#cloud-config\n\ndebug: True\n\nwrite_files:\n\n# Script to rename the private interface to eth1 and unify NetworkManager connection naming\n- path: /etc/cloud/rename_interface.sh\n  content: |\n    #!/bin/bash\n    set -euo pipefail\n\n    sleep 11\n\n    INTERFACE=$(ip link show | awk '/^3:/{print $2}' | sed 's/://g')\n    MAC=$(cat /sys/class/net/$INTERFACE/address)\n\n    cat \u003c\u003cEOF \u003e /etc/udev/rules.d/70-persistent-net.rules\n    SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"$MAC\", NAME=\"eth1\"\n    EOF\n\n    ip link set $INTERFACE down\n    ip link set $INTERFACE name eth1\n    ip link set eth1 up\n\n    eth0_connection=$(nmcli -g GENERAL.CONNECTION device show eth0)\n    nmcli connection modify \"$eth0_connection\" \\\n      con-name eth0 \\\n      connection.interface-name eth0\n\n    eth1_connection=$(nmcli -g GENERAL.CONNECTION device show eth1)\n    nmcli connection modify \"$eth1_connection\" \\\n      con-name eth1 \\\n      connection.interface-name eth1\n\n    systemctl restart NetworkManager\n  permissions: \"0744\"\n\n# Disable ssh password authentication\n- content: |\n    Port 22\n    PasswordAuthentication no\n    X11Forwarding no\n    MaxAuthTries 2\n    AllowTcpForwarding no\n    AllowAgentForwarding no\n    AuthorizedKeysFile .ssh/authorized_keys\n  path: /etc/ssh/sshd_config.d/kube-hetzner.conf\n\n# Set reboot method as \"kured\"\n- content: |\n    REBOOT_METHOD=kured\n  path: /etc/transactional-update.conf\n\n# Create Rancher repo config\n- content: |\n    [rancher-k3s-common-stable]\n    name=Rancher K3s Common (stable)\n    baseurl=https://rpm.rancher.io/k3s/stable/common/microos/noarch\n    enabled=1\n    gpgcheck=1\n    repo_gpgcheck=0\n    gpgkey=https://rpm.rancher.io/public.key\n  path: /etc/zypp/repos.d/rancher-k3s-common.repo\n\n# Create the kube_hetzner_selinux.te file, that allows in SELinux to not interfere with various needed services\n- path: /root/kube_hetzner_selinux.te\n  content: |\n    module kube_hetzner_selinux 1.0;\n\n    require {\n        type kernel_t, bin_t, kernel_generic_helper_t, iscsid_t, iscsid_exec_t, var_run_t, var_lib_t,\n            init_t, unlabeled_t, systemd_logind_t, systemd_hostnamed_t, container_t,\n            cert_t, container_var_lib_t, etc_t, usr_t, container_file_t, container_log_t,\n            container_share_t, container_runtime_exec_t, container_runtime_t, var_log_t, proc_t, io_uring_t, fuse_device_t, http_port_t,\n            container_var_run_t;\n        class key { read view };\n        class file { open read execute execute_no_trans create link lock rename write append setattr unlink getattr watch };\n        class sock_file { watch write create unlink };\n        class unix_dgram_socket create;\n        class unix_stream_socket { connectto read write };\n        class dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write watch };\n        class lnk_file { read create };\n        class system module_request;\n        class filesystem associate;\n        class bpf map_create;\n        class io_uring sqpoll;\n        class anon_inode { create map read write };\n        class tcp_socket name_connect;\n        class chr_file { open read write };\n    }\n\n    #============= kernel_generic_helper_t ==============\n    allow kernel_generic_helper_t bin_t:file execute_no_trans;\n    allow kernel_generic_helper_t kernel_t:key { read view };\n    allow kernel_generic_helper_t self:unix_dgram_socket create;\n\n    #============= iscsid_t ==============\n    allow iscsid_t iscsid_exec_t:file execute;\n    allow iscsid_t var_run_t:sock_file write;\n    allow iscsid_t var_run_t:unix_stream_socket connectto;\n\n    #============= init_t ==============\n    allow init_t unlabeled_t:dir { add_name remove_name rmdir search };\n    allow init_t unlabeled_t:lnk_file create;\n    allow init_t container_t:file { open read };\n    allow init_t container_file_t:file { execute execute_no_trans };\n    allow init_t fuse_device_t:chr_file { open read write };\n    allow init_t http_port_t:tcp_socket name_connect;\n\n    #============= systemd_logind_t ==============\n    allow systemd_logind_t unlabeled_t:dir search;\n\n    #============= systemd_hostnamed_t ==============\n    allow systemd_hostnamed_t unlabeled_t:dir search;\n\n    #============= container_t ==============\n    allow container_t { cert_t container_log_t }:dir read;\n    allow container_t { cert_t container_log_t }:lnk_file read;\n    allow container_t cert_t:file { read open };\n    allow container_t container_var_lib_t:file { create open read write rename lock setattr getattr unlink };\n    allow container_t etc_t:dir { add_name remove_name write create setattr watch };\n    allow container_t etc_t:file { create setattr unlink write };\n    allow container_t etc_t:sock_file { create unlink };\n    allow container_t usr_t:dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write };\n    allow container_t usr_t:file { append create execute getattr link lock read rename setattr unlink write };\n    allow container_t container_file_t:file { open read write append getattr setattr lock };\n    allow container_t container_file_t:sock_file watch;\n    allow container_t container_log_t:file { open read write append getattr setattr watch };\n    allow container_t container_share_t:dir { read write add_name remove_name };\n    allow container_t container_share_t:file { read write create unlink };\n    allow container_t container_runtime_exec_t:file { read execute execute_no_trans open };\n    allow container_t container_runtime_t:unix_stream_socket { connectto read write };\n    allow container_t kernel_t:system module_request;\n    allow container_t var_log_t:dir { add_name write remove_name watch read };\n    allow container_t var_log_t:file { create lock open read setattr write unlink getattr };\n    allow container_t var_lib_t:dir { add_name write read };\n    allow container_t var_lib_t:file { create lock open read setattr write getattr };\n    allow container_t proc_t:filesystem associate;\n    allow container_t self:bpf map_create;\n    allow container_t self:io_uring sqpoll;\n    allow container_t io_uring_t:anon_inode { create map read write };\n    allow container_t container_var_run_t:dir { add_name remove_name write };\n    allow container_t container_var_run_t:file { create open read rename unlink write };\n\n# Create the k3s registries file if needed\n\n# Create k3s registries file\n- content: IA==\n  encoding: base64\n  path: /etc/rancher/k3s/registries.yaml\n\n\n# Apply new DNS config\n\n# Set prepare for manual dns config\n- content: |\n    [main]\n    dns=none\n  path: /etc/NetworkManager/conf.d/dns.conf\n\n- content: |\n        nameserver 1.1.1.1\n        nameserver 8.8.8.8\n        nameserver 2606:4700:4700::1111\n    \n  path: /etc/resolv.conf\n  permissions: '0644'\n\n\n\n# Add ssh authorized keys\nssh_authorized_keys:\n  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH+s5Hje+Syr9YhpNiNwCr8NRSye+RchupieCVw+BOW8 mohitlakshya@gmail.com\n\n\n# Resize /var, not /, as that's the last partition in MicroOS image.\ngrowpart:\n    devices: [\"/var\"]\n\n# Make sure the hostname is set correctly\nhostname: k3s-egress-bcp\npreserve_hostname: true\n\nruncmd:\n\n# ensure that /var uses full available disk size, thanks to btrfs this is easy\n- [btrfs, 'filesystem', 'resize', 'max', '/var']\n\n# SELinux permission for the SSH alternative port\n\n\n# Create and apply the necessary SELinux module for kube-hetzner\n- [checkmodule, '-M', '-m', '-o', '/root/kube_hetzner_selinux.mod', '/root/kube_hetzner_selinux.te']\n- ['semodule_package', '-o', '/root/kube_hetzner_selinux.pp', '-m', '/root/kube_hetzner_selinux.mod']\n- [semodule, '-i', '/root/kube_hetzner_selinux.pp']\n- [setsebool, '-P', 'virt_use_samba', '1']\n- [setsebool, '-P', 'domain_kernel_load_modules', '1']\n\n# Disable rebootmgr service as we use kured instead\n- [systemctl, disable, '--now', 'rebootmgr.service']\n\n\n# Set the dns manually\n- [systemctl, 'reload', 'NetworkManager']\n\n\n# Bounds the amount of logs that can survive on the system\n- [sed, '-i', 's/#SystemMaxUse=/SystemMaxUse=3G/g', /etc/systemd/journald.conf]\n- [sed, '-i', 's/#MaxRetentionSec=/MaxRetentionSec=1week/g', /etc/systemd/journald.conf]\n\n# Reduces the default number of snapshots from 2-10 number limit, to 4 and from 4-10 number limit important, to 2\n- [sed, '-i', 's/NUMBER_LIMIT=\"2-10\"/NUMBER_LIMIT=\"4\"/g', /etc/snapper/configs/root]\n- [sed, '-i', 's/NUMBER_LIMIT_IMPORTANT=\"4-10\"/NUMBER_LIMIT_IMPORTANT=\"3\"/g', /etc/snapper/configs/root]\n\n# Allow network interface\n- [chmod, '+x', '/etc/cloud/rename_interface.sh']\n\n# Restart the sshd service to apply the new config\n- [systemctl, 'restart', 'sshd']\n\n# Make sure the network is up\n- [systemctl, restart, NetworkManager]\n- [systemctl, status, NetworkManager]\n- [ip, route, add, default, via, '172.31.1.1', dev, 'eth0']\n\n# Cleanup some logs\n- [truncate, '-s', '0', '/var/log/audit/audit.log']\n\n\n",
                "content_type": "text/cloud-config",
                "filename": "init.cfg",
                "merge_type": null
              }
            ],
            "rendered": "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"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"1-0-egress\"]",
      "mode": "managed",
      "type": "hcloud_rdns",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner.module.agents[\"1-0-egress\"]",
      "mode": "managed",
      "type": "hcloud_server",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [
              1777551
            ],
            "id": "57181515",
            "ignore_remote_firewall_ids": false,
            "image": "203041546",
            "ipv4_address": "159.69.246.176",
            "ipv6_address": "2a01:4f8:c012:c31a::1",
            "ipv6_network": "2a01:4f8:c012:c31a::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform",
              "role": "agent_node"
            },
            "location": "fsn1",
            "name": "k3s-egress-bcp",
            "network": [],
            "placement_group_id": 431708,
            "primary_disk_size": 40,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx22",
            "shutdown_before_deletion": false,
            "ssh_keys": [
              "25242636"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "SvMlGA1Inkd2LRuA/5rsQ4cAV/w="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"1-0-egress\"]",
      "mode": "managed",
      "type": "hcloud_server_network",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alias_ips": null,
            "id": "57181515-10424340",
            "ip": "10.1.0.101",
            "mac_address": "86:00:00:e6:c2:02",
            "network_id": null,
            "server_id": 57181515,
            "subnet_id": "10424340-10.1.0.0/16"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.hcloud_server.server",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"1-0-egress\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "registries",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3980203483644171011",
            "triggers": {
              "registries": " "
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.hcloud_server.server",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"1-0-egress\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "zram",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6717771750408477930",
            "triggers": {
              "zram_size": ""
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.hcloud_server.server",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"1-0-egress\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "identity_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "cvh3qf1l5qwl1sd57b2j",
            "keepers": null,
            "length": 20,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "cvh3qf1l5qwl1sd57b2j",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"1-0-egress\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "bcp",
            "keepers": {
              "name": "k3s-egress"
            },
            "length": 3,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": false,
            "numeric": false,
            "override_special": null,
            "result": "bcp",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "boundary": "MIMEBOUNDARY",
            "gzip": true,
            "id": "1677221491",
            "part": [
              {
                "content": "#cloud-config\n\ndebug: True\n\nwrite_files:\n\n# Script to rename the private interface to eth1 and unify NetworkManager connection naming\n- path: /etc/cloud/rename_interface.sh\n  content: |\n    #!/bin/bash\n    set -euo pipefail\n\n    sleep 11\n\n    INTERFACE=$(ip link show | awk '/^3:/{print $2}' | sed 's/://g')\n    MAC=$(cat /sys/class/net/$INTERFACE/address)\n\n    cat \u003c\u003cEOF \u003e /etc/udev/rules.d/70-persistent-net.rules\n    SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"$MAC\", NAME=\"eth1\"\n    EOF\n\n    ip link set $INTERFACE down\n    ip link set $INTERFACE name eth1\n    ip link set eth1 up\n\n    eth0_connection=$(nmcli -g GENERAL.CONNECTION device show eth0)\n    nmcli connection modify \"$eth0_connection\" \\\n      con-name eth0 \\\n      connection.interface-name eth0\n\n    eth1_connection=$(nmcli -g GENERAL.CONNECTION device show eth1)\n    nmcli connection modify \"$eth1_connection\" \\\n      con-name eth1 \\\n      connection.interface-name eth1\n\n    systemctl restart NetworkManager\n  permissions: \"0744\"\n\n# Disable ssh password authentication\n- content: |\n    Port 22\n    PasswordAuthentication no\n    X11Forwarding no\n    MaxAuthTries 2\n    AllowTcpForwarding no\n    AllowAgentForwarding no\n    AuthorizedKeysFile .ssh/authorized_keys\n  path: /etc/ssh/sshd_config.d/kube-hetzner.conf\n\n# Set reboot method as \"kured\"\n- content: |\n    REBOOT_METHOD=kured\n  path: /etc/transactional-update.conf\n\n# Create Rancher repo config\n- content: |\n    [rancher-k3s-common-stable]\n    name=Rancher K3s Common (stable)\n    baseurl=https://rpm.rancher.io/k3s/stable/common/microos/noarch\n    enabled=1\n    gpgcheck=1\n    repo_gpgcheck=0\n    gpgkey=https://rpm.rancher.io/public.key\n  path: /etc/zypp/repos.d/rancher-k3s-common.repo\n\n# Create the kube_hetzner_selinux.te file, that allows in SELinux to not interfere with various needed services\n- path: /root/kube_hetzner_selinux.te\n  content: |\n    module kube_hetzner_selinux 1.0;\n\n    require {\n        type kernel_t, bin_t, kernel_generic_helper_t, iscsid_t, iscsid_exec_t, var_run_t, var_lib_t,\n            init_t, unlabeled_t, systemd_logind_t, systemd_hostnamed_t, container_t,\n            cert_t, container_var_lib_t, etc_t, usr_t, container_file_t, container_log_t,\n            container_share_t, container_runtime_exec_t, container_runtime_t, var_log_t, proc_t, io_uring_t, fuse_device_t, http_port_t,\n            container_var_run_t;\n        class key { read view };\n        class file { open read execute execute_no_trans create link lock rename write append setattr unlink getattr watch };\n        class sock_file { watch write create unlink };\n        class unix_dgram_socket create;\n        class unix_stream_socket { connectto read write };\n        class dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write watch };\n        class lnk_file { read create };\n        class system module_request;\n        class filesystem associate;\n        class bpf map_create;\n        class io_uring sqpoll;\n        class anon_inode { create map read write };\n        class tcp_socket name_connect;\n        class chr_file { open read write };\n    }\n\n    #============= kernel_generic_helper_t ==============\n    allow kernel_generic_helper_t bin_t:file execute_no_trans;\n    allow kernel_generic_helper_t kernel_t:key { read view };\n    allow kernel_generic_helper_t self:unix_dgram_socket create;\n\n    #============= iscsid_t ==============\n    allow iscsid_t iscsid_exec_t:file execute;\n    allow iscsid_t var_run_t:sock_file write;\n    allow iscsid_t var_run_t:unix_stream_socket connectto;\n\n    #============= init_t ==============\n    allow init_t unlabeled_t:dir { add_name remove_name rmdir search };\n    allow init_t unlabeled_t:lnk_file create;\n    allow init_t container_t:file { open read };\n    allow init_t container_file_t:file { execute execute_no_trans };\n    allow init_t fuse_device_t:chr_file { open read write };\n    allow init_t http_port_t:tcp_socket name_connect;\n\n    #============= systemd_logind_t ==============\n    allow systemd_logind_t unlabeled_t:dir search;\n\n    #============= systemd_hostnamed_t ==============\n    allow systemd_hostnamed_t unlabeled_t:dir search;\n\n    #============= container_t ==============\n    allow container_t { cert_t container_log_t }:dir read;\n    allow container_t { cert_t container_log_t }:lnk_file read;\n    allow container_t cert_t:file { read open };\n    allow container_t container_var_lib_t:file { create open read write rename lock setattr getattr unlink };\n    allow container_t etc_t:dir { add_name remove_name write create setattr watch };\n    allow container_t etc_t:file { create setattr unlink write };\n    allow container_t etc_t:sock_file { create unlink };\n    allow container_t usr_t:dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write };\n    allow container_t usr_t:file { append create execute getattr link lock read rename setattr unlink write };\n    allow container_t container_file_t:file { open read write append getattr setattr lock };\n    allow container_t container_file_t:sock_file watch;\n    allow container_t container_log_t:file { open read write append getattr setattr watch };\n    allow container_t container_share_t:dir { read write add_name remove_name };\n    allow container_t container_share_t:file { read write create unlink };\n    allow container_t container_runtime_exec_t:file { read execute execute_no_trans open };\n    allow container_t container_runtime_t:unix_stream_socket { connectto read write };\n    allow container_t kernel_t:system module_request;\n    allow container_t var_log_t:dir { add_name write remove_name watch read };\n    allow container_t var_log_t:file { create lock open read setattr write unlink getattr };\n    allow container_t var_lib_t:dir { add_name write read };\n    allow container_t var_lib_t:file { create lock open read setattr write getattr };\n    allow container_t proc_t:filesystem associate;\n    allow container_t self:bpf map_create;\n    allow container_t self:io_uring sqpoll;\n    allow container_t io_uring_t:anon_inode { create map read write };\n    allow container_t container_var_run_t:dir { add_name remove_name write };\n    allow container_t container_var_run_t:file { create open read rename unlink write };\n\n# Create the k3s registries file if needed\n\n# Create k3s registries file\n- content: IA==\n  encoding: base64\n  path: /etc/rancher/k3s/registries.yaml\n\n\n# Apply new DNS config\n\n# Set prepare for manual dns config\n- content: |\n    [main]\n    dns=none\n  path: /etc/NetworkManager/conf.d/dns.conf\n\n- content: |\n        nameserver 1.1.1.1\n        nameserver 8.8.8.8\n        nameserver 2606:4700:4700::1111\n    \n  path: /etc/resolv.conf\n  permissions: '0644'\n\n\n\n# Add ssh authorized keys\nssh_authorized_keys:\n  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH+s5Hje+Syr9YhpNiNwCr8NRSye+RchupieCVw+BOW8 mohitlakshya@gmail.com\n\n\n# Resize /var, not /, as that's the last partition in MicroOS image.\ngrowpart:\n    devices: [\"/var\"]\n\n# Make sure the hostname is set correctly\nhostname: k3s-control-plane-fsn1-rcl\npreserve_hostname: true\n\nruncmd:\n\n# ensure that /var uses full available disk size, thanks to btrfs this is easy\n- [btrfs, 'filesystem', 'resize', 'max', '/var']\n\n# SELinux permission for the SSH alternative port\n\n\n# Create and apply the necessary SELinux module for kube-hetzner\n- [checkmodule, '-M', '-m', '-o', '/root/kube_hetzner_selinux.mod', '/root/kube_hetzner_selinux.te']\n- ['semodule_package', '-o', '/root/kube_hetzner_selinux.pp', '-m', '/root/kube_hetzner_selinux.mod']\n- [semodule, '-i', '/root/kube_hetzner_selinux.pp']\n- [setsebool, '-P', 'virt_use_samba', '1']\n- [setsebool, '-P', 'domain_kernel_load_modules', '1']\n\n# Disable rebootmgr service as we use kured instead\n- [systemctl, disable, '--now', 'rebootmgr.service']\n\n\n# Set the dns manually\n- [systemctl, 'reload', 'NetworkManager']\n\n\n# Bounds the amount of logs that can survive on the system\n- [sed, '-i', 's/#SystemMaxUse=/SystemMaxUse=3G/g', /etc/systemd/journald.conf]\n- [sed, '-i', 's/#MaxRetentionSec=/MaxRetentionSec=1week/g', /etc/systemd/journald.conf]\n\n# Reduces the default number of snapshots from 2-10 number limit, to 4 and from 4-10 number limit important, to 2\n- [sed, '-i', 's/NUMBER_LIMIT=\"2-10\"/NUMBER_LIMIT=\"4\"/g', /etc/snapper/configs/root]\n- [sed, '-i', 's/NUMBER_LIMIT_IMPORTANT=\"4-10\"/NUMBER_LIMIT_IMPORTANT=\"3\"/g', /etc/snapper/configs/root]\n\n# Allow network interface\n- [chmod, '+x', '/etc/cloud/rename_interface.sh']\n\n# Restart the sshd service to apply the new config\n- [systemctl, 'restart', 'sshd']\n\n# Make sure the network is up\n- [systemctl, restart, NetworkManager]\n- [systemctl, status, NetworkManager]\n- [ip, route, add, default, via, '172.31.1.1', dev, 'eth0']\n\n# Cleanup some logs\n- [truncate, '-s', '0', '/var/log/audit/audit.log']\n\n\n",
                "content_type": "text/cloud-config",
                "filename": "init.cfg",
                "merge_type": null
              }
            ],
            "rendered": "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"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "hcloud_rdns",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "hcloud_server",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [
              1777551
            ],
            "id": "57181512",
            "ignore_remote_firewall_ids": false,
            "image": "203041546",
            "ipv4_address": "78.47.22.130",
            "ipv6_address": "2a01:4f8:1c17:546b::1",
            "ipv6_network": "2a01:4f8:1c17:546b::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform",
              "role": "control_plane_node"
            },
            "location": "fsn1",
            "name": "k3s-control-plane-fsn1-rcl",
            "network": [],
            "placement_group_id": 431709,
            "primary_disk_size": 40,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx22",
            "shutdown_before_deletion": false,
            "ssh_keys": [
              "25242636"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "DgWMfAEDdhVGzyu0W52fPA8V1pM="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "hcloud_server_network",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alias_ips": null,
            "id": "57181512-10424340",
            "ip": "10.255.0.101",
            "mac_address": "86:00:00:e6:c2:09",
            "network_id": null,
            "server_id": 57181512,
            "subnet_id": "10424340-10.255.0.0/16"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "registries",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8426817573032433487",
            "triggers": {
              "registries": " "
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "zram",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7922228012160912568",
            "triggers": {
              "zram_size": ""
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "identity_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "xx88oqdh08idft00kn49",
            "keepers": null,
            "length": 20,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "xx88oqdh08idft00kn49",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "rcl",
            "keepers": {
              "name": "k3s-control-plane-fsn1"
            },
            "length": 3,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": false,
            "numeric": false,
            "override_special": null,
            "result": "rcl",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "boundary": "MIMEBOUNDARY",
            "gzip": true,
            "id": "2904155630",
            "part": [
              {
                "content": "#cloud-config\n\ndebug: True\n\nwrite_files:\n\n# Script to rename the private interface to eth1 and unify NetworkManager connection naming\n- path: /etc/cloud/rename_interface.sh\n  content: |\n    #!/bin/bash\n    set -euo pipefail\n\n    sleep 11\n\n    INTERFACE=$(ip link show | awk '/^3:/{print $2}' | sed 's/://g')\n    MAC=$(cat /sys/class/net/$INTERFACE/address)\n\n    cat \u003c\u003cEOF \u003e /etc/udev/rules.d/70-persistent-net.rules\n    SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"$MAC\", NAME=\"eth1\"\n    EOF\n\n    ip link set $INTERFACE down\n    ip link set $INTERFACE name eth1\n    ip link set eth1 up\n\n    eth0_connection=$(nmcli -g GENERAL.CONNECTION device show eth0)\n    nmcli connection modify \"$eth0_connection\" \\\n      con-name eth0 \\\n      connection.interface-name eth0\n\n    eth1_connection=$(nmcli -g GENERAL.CONNECTION device show eth1)\n    nmcli connection modify \"$eth1_connection\" \\\n      con-name eth1 \\\n      connection.interface-name eth1\n\n    systemctl restart NetworkManager\n  permissions: \"0744\"\n\n# Disable ssh password authentication\n- content: |\n    Port 22\n    PasswordAuthentication no\n    X11Forwarding no\n    MaxAuthTries 2\n    AllowTcpForwarding no\n    AllowAgentForwarding no\n    AuthorizedKeysFile .ssh/authorized_keys\n  path: /etc/ssh/sshd_config.d/kube-hetzner.conf\n\n# Set reboot method as \"kured\"\n- content: |\n    REBOOT_METHOD=kured\n  path: /etc/transactional-update.conf\n\n# Create Rancher repo config\n- content: |\n    [rancher-k3s-common-stable]\n    name=Rancher K3s Common (stable)\n    baseurl=https://rpm.rancher.io/k3s/stable/common/microos/noarch\n    enabled=1\n    gpgcheck=1\n    repo_gpgcheck=0\n    gpgkey=https://rpm.rancher.io/public.key\n  path: /etc/zypp/repos.d/rancher-k3s-common.repo\n\n# Create the kube_hetzner_selinux.te file, that allows in SELinux to not interfere with various needed services\n- path: /root/kube_hetzner_selinux.te\n  content: |\n    module kube_hetzner_selinux 1.0;\n\n    require {\n        type kernel_t, bin_t, kernel_generic_helper_t, iscsid_t, iscsid_exec_t, var_run_t, var_lib_t,\n            init_t, unlabeled_t, systemd_logind_t, systemd_hostnamed_t, container_t,\n            cert_t, container_var_lib_t, etc_t, usr_t, container_file_t, container_log_t,\n            container_share_t, container_runtime_exec_t, container_runtime_t, var_log_t, proc_t, io_uring_t, fuse_device_t, http_port_t,\n            container_var_run_t;\n        class key { read view };\n        class file { open read execute execute_no_trans create link lock rename write append setattr unlink getattr watch };\n        class sock_file { watch write create unlink };\n        class unix_dgram_socket create;\n        class unix_stream_socket { connectto read write };\n        class dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write watch };\n        class lnk_file { read create };\n        class system module_request;\n        class filesystem associate;\n        class bpf map_create;\n        class io_uring sqpoll;\n        class anon_inode { create map read write };\n        class tcp_socket name_connect;\n        class chr_file { open read write };\n    }\n\n    #============= kernel_generic_helper_t ==============\n    allow kernel_generic_helper_t bin_t:file execute_no_trans;\n    allow kernel_generic_helper_t kernel_t:key { read view };\n    allow kernel_generic_helper_t self:unix_dgram_socket create;\n\n    #============= iscsid_t ==============\n    allow iscsid_t iscsid_exec_t:file execute;\n    allow iscsid_t var_run_t:sock_file write;\n    allow iscsid_t var_run_t:unix_stream_socket connectto;\n\n    #============= init_t ==============\n    allow init_t unlabeled_t:dir { add_name remove_name rmdir search };\n    allow init_t unlabeled_t:lnk_file create;\n    allow init_t container_t:file { open read };\n    allow init_t container_file_t:file { execute execute_no_trans };\n    allow init_t fuse_device_t:chr_file { open read write };\n    allow init_t http_port_t:tcp_socket name_connect;\n\n    #============= systemd_logind_t ==============\n    allow systemd_logind_t unlabeled_t:dir search;\n\n    #============= systemd_hostnamed_t ==============\n    allow systemd_hostnamed_t unlabeled_t:dir search;\n\n    #============= container_t ==============\n    allow container_t { cert_t container_log_t }:dir read;\n    allow container_t { cert_t container_log_t }:lnk_file read;\n    allow container_t cert_t:file { read open };\n    allow container_t container_var_lib_t:file { create open read write rename lock setattr getattr unlink };\n    allow container_t etc_t:dir { add_name remove_name write create setattr watch };\n    allow container_t etc_t:file { create setattr unlink write };\n    allow container_t etc_t:sock_file { create unlink };\n    allow container_t usr_t:dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write };\n    allow container_t usr_t:file { append create execute getattr link lock read rename setattr unlink write };\n    allow container_t container_file_t:file { open read write append getattr setattr lock };\n    allow container_t container_file_t:sock_file watch;\n    allow container_t container_log_t:file { open read write append getattr setattr watch };\n    allow container_t container_share_t:dir { read write add_name remove_name };\n    allow container_t container_share_t:file { read write create unlink };\n    allow container_t container_runtime_exec_t:file { read execute execute_no_trans open };\n    allow container_t container_runtime_t:unix_stream_socket { connectto read write };\n    allow container_t kernel_t:system module_request;\n    allow container_t var_log_t:dir { add_name write remove_name watch read };\n    allow container_t var_log_t:file { create lock open read setattr write unlink getattr };\n    allow container_t var_lib_t:dir { add_name write read };\n    allow container_t var_lib_t:file { create lock open read setattr write getattr };\n    allow container_t proc_t:filesystem associate;\n    allow container_t self:bpf map_create;\n    allow container_t self:io_uring sqpoll;\n    allow container_t io_uring_t:anon_inode { create map read write };\n    allow container_t container_var_run_t:dir { add_name remove_name write };\n    allow container_t container_var_run_t:file { create open read rename unlink write };\n\n# Create the k3s registries file if needed\n\n# Create k3s registries file\n- content: IA==\n  encoding: base64\n  path: /etc/rancher/k3s/registries.yaml\n\n\n# Apply new DNS config\n\n# Set prepare for manual dns config\n- content: |\n    [main]\n    dns=none\n  path: /etc/NetworkManager/conf.d/dns.conf\n\n- content: |\n        nameserver 1.1.1.1\n        nameserver 8.8.8.8\n        nameserver 2606:4700:4700::1111\n    \n  path: /etc/resolv.conf\n  permissions: '0644'\n\n\n\n# Add ssh authorized keys\nssh_authorized_keys:\n  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH+s5Hje+Syr9YhpNiNwCr8NRSye+RchupieCVw+BOW8 mohitlakshya@gmail.com\n\n\n# Resize /var, not /, as that's the last partition in MicroOS image.\ngrowpart:\n    devices: [\"/var\"]\n\n# Make sure the hostname is set correctly\nhostname: k3s-control-plane-nbg1-gji\npreserve_hostname: true\n\nruncmd:\n\n# ensure that /var uses full available disk size, thanks to btrfs this is easy\n- [btrfs, 'filesystem', 'resize', 'max', '/var']\n\n# SELinux permission for the SSH alternative port\n\n\n# Create and apply the necessary SELinux module for kube-hetzner\n- [checkmodule, '-M', '-m', '-o', '/root/kube_hetzner_selinux.mod', '/root/kube_hetzner_selinux.te']\n- ['semodule_package', '-o', '/root/kube_hetzner_selinux.pp', '-m', '/root/kube_hetzner_selinux.mod']\n- [semodule, '-i', '/root/kube_hetzner_selinux.pp']\n- [setsebool, '-P', 'virt_use_samba', '1']\n- [setsebool, '-P', 'domain_kernel_load_modules', '1']\n\n# Disable rebootmgr service as we use kured instead\n- [systemctl, disable, '--now', 'rebootmgr.service']\n\n\n# Set the dns manually\n- [systemctl, 'reload', 'NetworkManager']\n\n\n# Bounds the amount of logs that can survive on the system\n- [sed, '-i', 's/#SystemMaxUse=/SystemMaxUse=3G/g', /etc/systemd/journald.conf]\n- [sed, '-i', 's/#MaxRetentionSec=/MaxRetentionSec=1week/g', /etc/systemd/journald.conf]\n\n# Reduces the default number of snapshots from 2-10 number limit, to 4 and from 4-10 number limit important, to 2\n- [sed, '-i', 's/NUMBER_LIMIT=\"2-10\"/NUMBER_LIMIT=\"4\"/g', /etc/snapper/configs/root]\n- [sed, '-i', 's/NUMBER_LIMIT_IMPORTANT=\"4-10\"/NUMBER_LIMIT_IMPORTANT=\"3\"/g', /etc/snapper/configs/root]\n\n# Allow network interface\n- [chmod, '+x', '/etc/cloud/rename_interface.sh']\n\n# Restart the sshd service to apply the new config\n- [systemctl, 'restart', 'sshd']\n\n# Make sure the network is up\n- [systemctl, restart, NetworkManager]\n- [systemctl, status, NetworkManager]\n- [ip, route, add, default, via, '172.31.1.1', dev, 'eth0']\n\n# Cleanup some logs\n- [truncate, '-s', '0', '/var/log/audit/audit.log']\n\n\n",
                "content_type": "text/cloud-config",
                "filename": "init.cfg",
                "merge_type": null
              }
            ],
            "rendered": "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"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"]",
      "mode": "managed",
      "type": "hcloud_rdns",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"]",
      "mode": "managed",
      "type": "hcloud_server",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "nbg1-dc3",
            "delete_protection": false,
            "firewall_ids": [
              1777551
            ],
            "id": "57181516",
            "ignore_remote_firewall_ids": false,
            "image": "203041546",
            "ipv4_address": "5.75.135.238",
            "ipv6_address": "2a01:4f8:1c0c:63cc::1",
            "ipv6_network": "2a01:4f8:1c0c:63cc::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform",
              "role": "control_plane_node"
            },
            "location": "nbg1",
            "name": "k3s-control-plane-nbg1-gji",
            "network": [],
            "placement_group_id": 431709,
            "primary_disk_size": 40,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx22",
            "shutdown_before_deletion": false,
            "ssh_keys": [
              "25242636"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "yHp9U6M4+nnSlPNWPJ/6HV3Yaz8="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"]",
      "mode": "managed",
      "type": "hcloud_server_network",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alias_ips": null,
            "id": "57181516-10424340",
            "ip": "10.254.0.101",
            "mac_address": "86:00:00:e6:c2:08",
            "network_id": null,
            "server_id": 57181516,
            "subnet_id": "10424340-10.254.0.0/16"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "registries",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2546570950083416975",
            "triggers": {
              "registries": " "
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "zram",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4440733678613725580",
            "triggers": {
              "zram_size": ""
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "identity_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "tpsbnurmxurm30vf81kq",
            "keepers": null,
            "length": 20,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "tpsbnurmxurm30vf81kq",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "gji",
            "keepers": {
              "name": "k3s-control-plane-nbg1"
            },
            "length": 3,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": false,
            "numeric": false,
            "override_special": null,
            "result": "gji",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "boundary": "MIMEBOUNDARY",
            "gzip": true,
            "id": "3992456549",
            "part": [
              {
                "content": "#cloud-config\n\ndebug: True\n\nwrite_files:\n\n# Script to rename the private interface to eth1 and unify NetworkManager connection naming\n- path: /etc/cloud/rename_interface.sh\n  content: |\n    #!/bin/bash\n    set -euo pipefail\n\n    sleep 11\n\n    INTERFACE=$(ip link show | awk '/^3:/{print $2}' | sed 's/://g')\n    MAC=$(cat /sys/class/net/$INTERFACE/address)\n\n    cat \u003c\u003cEOF \u003e /etc/udev/rules.d/70-persistent-net.rules\n    SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"$MAC\", NAME=\"eth1\"\n    EOF\n\n    ip link set $INTERFACE down\n    ip link set $INTERFACE name eth1\n    ip link set eth1 up\n\n    eth0_connection=$(nmcli -g GENERAL.CONNECTION device show eth0)\n    nmcli connection modify \"$eth0_connection\" \\\n      con-name eth0 \\\n      connection.interface-name eth0\n\n    eth1_connection=$(nmcli -g GENERAL.CONNECTION device show eth1)\n    nmcli connection modify \"$eth1_connection\" \\\n      con-name eth1 \\\n      connection.interface-name eth1\n\n    systemctl restart NetworkManager\n  permissions: \"0744\"\n\n# Disable ssh password authentication\n- content: |\n    Port 22\n    PasswordAuthentication no\n    X11Forwarding no\n    MaxAuthTries 2\n    AllowTcpForwarding no\n    AllowAgentForwarding no\n    AuthorizedKeysFile .ssh/authorized_keys\n  path: /etc/ssh/sshd_config.d/kube-hetzner.conf\n\n# Set reboot method as \"kured\"\n- content: |\n    REBOOT_METHOD=kured\n  path: /etc/transactional-update.conf\n\n# Create Rancher repo config\n- content: |\n    [rancher-k3s-common-stable]\n    name=Rancher K3s Common (stable)\n    baseurl=https://rpm.rancher.io/k3s/stable/common/microos/noarch\n    enabled=1\n    gpgcheck=1\n    repo_gpgcheck=0\n    gpgkey=https://rpm.rancher.io/public.key\n  path: /etc/zypp/repos.d/rancher-k3s-common.repo\n\n# Create the kube_hetzner_selinux.te file, that allows in SELinux to not interfere with various needed services\n- path: /root/kube_hetzner_selinux.te\n  content: |\n    module kube_hetzner_selinux 1.0;\n\n    require {\n        type kernel_t, bin_t, kernel_generic_helper_t, iscsid_t, iscsid_exec_t, var_run_t, var_lib_t,\n            init_t, unlabeled_t, systemd_logind_t, systemd_hostnamed_t, container_t,\n            cert_t, container_var_lib_t, etc_t, usr_t, container_file_t, container_log_t,\n            container_share_t, container_runtime_exec_t, container_runtime_t, var_log_t, proc_t, io_uring_t, fuse_device_t, http_port_t,\n            container_var_run_t;\n        class key { read view };\n        class file { open read execute execute_no_trans create link lock rename write append setattr unlink getattr watch };\n        class sock_file { watch write create unlink };\n        class unix_dgram_socket create;\n        class unix_stream_socket { connectto read write };\n        class dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write watch };\n        class lnk_file { read create };\n        class system module_request;\n        class filesystem associate;\n        class bpf map_create;\n        class io_uring sqpoll;\n        class anon_inode { create map read write };\n        class tcp_socket name_connect;\n        class chr_file { open read write };\n    }\n\n    #============= kernel_generic_helper_t ==============\n    allow kernel_generic_helper_t bin_t:file execute_no_trans;\n    allow kernel_generic_helper_t kernel_t:key { read view };\n    allow kernel_generic_helper_t self:unix_dgram_socket create;\n\n    #============= iscsid_t ==============\n    allow iscsid_t iscsid_exec_t:file execute;\n    allow iscsid_t var_run_t:sock_file write;\n    allow iscsid_t var_run_t:unix_stream_socket connectto;\n\n    #============= init_t ==============\n    allow init_t unlabeled_t:dir { add_name remove_name rmdir search };\n    allow init_t unlabeled_t:lnk_file create;\n    allow init_t container_t:file { open read };\n    allow init_t container_file_t:file { execute execute_no_trans };\n    allow init_t fuse_device_t:chr_file { open read write };\n    allow init_t http_port_t:tcp_socket name_connect;\n\n    #============= systemd_logind_t ==============\n    allow systemd_logind_t unlabeled_t:dir search;\n\n    #============= systemd_hostnamed_t ==============\n    allow systemd_hostnamed_t unlabeled_t:dir search;\n\n    #============= container_t ==============\n    allow container_t { cert_t container_log_t }:dir read;\n    allow container_t { cert_t container_log_t }:lnk_file read;\n    allow container_t cert_t:file { read open };\n    allow container_t container_var_lib_t:file { create open read write rename lock setattr getattr unlink };\n    allow container_t etc_t:dir { add_name remove_name write create setattr watch };\n    allow container_t etc_t:file { create setattr unlink write };\n    allow container_t etc_t:sock_file { create unlink };\n    allow container_t usr_t:dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write };\n    allow container_t usr_t:file { append create execute getattr link lock read rename setattr unlink write };\n    allow container_t container_file_t:file { open read write append getattr setattr lock };\n    allow container_t container_file_t:sock_file watch;\n    allow container_t container_log_t:file { open read write append getattr setattr watch };\n    allow container_t container_share_t:dir { read write add_name remove_name };\n    allow container_t container_share_t:file { read write create unlink };\n    allow container_t container_runtime_exec_t:file { read execute execute_no_trans open };\n    allow container_t container_runtime_t:unix_stream_socket { connectto read write };\n    allow container_t kernel_t:system module_request;\n    allow container_t var_log_t:dir { add_name write remove_name watch read };\n    allow container_t var_log_t:file { create lock open read setattr write unlink getattr };\n    allow container_t var_lib_t:dir { add_name write read };\n    allow container_t var_lib_t:file { create lock open read setattr write getattr };\n    allow container_t proc_t:filesystem associate;\n    allow container_t self:bpf map_create;\n    allow container_t self:io_uring sqpoll;\n    allow container_t io_uring_t:anon_inode { create map read write };\n    allow container_t container_var_run_t:dir { add_name remove_name write };\n    allow container_t container_var_run_t:file { create open read rename unlink write };\n\n# Create the k3s registries file if needed\n\n# Create k3s registries file\n- content: IA==\n  encoding: base64\n  path: /etc/rancher/k3s/registries.yaml\n\n\n# Apply new DNS config\n\n# Set prepare for manual dns config\n- content: |\n    [main]\n    dns=none\n  path: /etc/NetworkManager/conf.d/dns.conf\n\n- content: |\n        nameserver 1.1.1.1\n        nameserver 8.8.8.8\n        nameserver 2606:4700:4700::1111\n    \n  path: /etc/resolv.conf\n  permissions: '0644'\n\n\n\n# Add ssh authorized keys\nssh_authorized_keys:\n  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH+s5Hje+Syr9YhpNiNwCr8NRSye+RchupieCVw+BOW8 mohitlakshya@gmail.com\n\n\n# Resize /var, not /, as that's the last partition in MicroOS image.\ngrowpart:\n    devices: [\"/var\"]\n\n# Make sure the hostname is set correctly\nhostname: k3s-control-plane-hel1-hse\npreserve_hostname: true\n\nruncmd:\n\n# ensure that /var uses full available disk size, thanks to btrfs this is easy\n- [btrfs, 'filesystem', 'resize', 'max', '/var']\n\n# SELinux permission for the SSH alternative port\n\n\n# Create and apply the necessary SELinux module for kube-hetzner\n- [checkmodule, '-M', '-m', '-o', '/root/kube_hetzner_selinux.mod', '/root/kube_hetzner_selinux.te']\n- ['semodule_package', '-o', '/root/kube_hetzner_selinux.pp', '-m', '/root/kube_hetzner_selinux.mod']\n- [semodule, '-i', '/root/kube_hetzner_selinux.pp']\n- [setsebool, '-P', 'virt_use_samba', '1']\n- [setsebool, '-P', 'domain_kernel_load_modules', '1']\n\n# Disable rebootmgr service as we use kured instead\n- [systemctl, disable, '--now', 'rebootmgr.service']\n\n\n# Set the dns manually\n- [systemctl, 'reload', 'NetworkManager']\n\n\n# Bounds the amount of logs that can survive on the system\n- [sed, '-i', 's/#SystemMaxUse=/SystemMaxUse=3G/g', /etc/systemd/journald.conf]\n- [sed, '-i', 's/#MaxRetentionSec=/MaxRetentionSec=1week/g', /etc/systemd/journald.conf]\n\n# Reduces the default number of snapshots from 2-10 number limit, to 4 and from 4-10 number limit important, to 2\n- [sed, '-i', 's/NUMBER_LIMIT=\"2-10\"/NUMBER_LIMIT=\"4\"/g', /etc/snapper/configs/root]\n- [sed, '-i', 's/NUMBER_LIMIT_IMPORTANT=\"4-10\"/NUMBER_LIMIT_IMPORTANT=\"3\"/g', /etc/snapper/configs/root]\n\n# Allow network interface\n- [chmod, '+x', '/etc/cloud/rename_interface.sh']\n\n# Restart the sshd service to apply the new config\n- [systemctl, 'restart', 'sshd']\n\n# Make sure the network is up\n- [systemctl, restart, NetworkManager]\n- [systemctl, status, NetworkManager]\n- [ip, route, add, default, via, '172.31.1.1', dev, 'eth0']\n\n# Cleanup some logs\n- [truncate, '-s', '0', '/var/log/audit/audit.log']\n\n\n",
                "content_type": "text/cloud-config",
                "filename": "init.cfg",
                "merge_type": null
              }
            ],
            "rendered": "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"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"]",
      "mode": "managed",
      "type": "hcloud_rdns",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"]",
      "mode": "managed",
      "type": "hcloud_server",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "hel1-dc2",
            "delete_protection": false,
            "firewall_ids": [
              1777551
            ],
            "id": "57181514",
            "ignore_remote_firewall_ids": false,
            "image": "203041546",
            "ipv4_address": "65.21.111.52",
            "ipv6_address": "2a01:4f9:c010:c585::1",
            "ipv6_network": "2a01:4f9:c010:c585::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform",
              "role": "control_plane_node"
            },
            "location": "hel1",
            "name": "k3s-control-plane-hel1-hse",
            "network": [],
            "placement_group_id": 431709,
            "primary_disk_size": 40,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx22",
            "shutdown_before_deletion": false,
            "ssh_keys": [
              "25242636"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "4KdenH7OhTIJ48xtkJffniV3bSE="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"]",
      "mode": "managed",
      "type": "hcloud_server_network",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alias_ips": null,
            "id": "57181514-10424340",
            "ip": "10.253.0.101",
            "mac_address": "86:00:00:e6:c2:07",
            "network_id": null,
            "server_id": 57181514,
            "subnet_id": "10424340-10.253.0.0/16"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "registries",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3157298334659257270",
            "triggers": {
              "registries": " "
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"]",
      "mode": "managed",
      "type": "null_resource",
      "name": "zram",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6456645469622683537",
            "triggers": {
              "zram_size": ""
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.hcloud_server.server",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "identity_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "u6nc20vcurmhbkt0liqo",
            "keepers": null,
            "length": 20,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "u6nc20vcurmhbkt0liqo",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "hse",
            "keepers": {
              "name": "k3s-control-plane-hel1"
            },
            "length": 3,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": false,
            "numeric": false,
            "override_special": null,
            "result": "hse",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cluster_autoscaler_log_level",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cluster_autoscaler_log_level",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.lb_hostname",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.lb_hostname",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cilium_routing_mode",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cilium_routing_mode",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.ingress_replica_count",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.ingress_replica_count",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.longhorn_replica_count",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.longhorn_replica_count",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cni_plugin",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cni_plugin",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.existing_network_id",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.existing_network_id",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.ingress_controller",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.ingress_controller",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.base_domain",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.base_domain",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.module.control_planes.var.zram_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"].var.zram_size",
          "status": "pass"
        },
        {
          "object_addr": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"].var.zram_size",
          "status": "pass"
        },
        {
          "object_addr": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"].var.zram_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.module.control_planes.var.swap_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.module.control_planes[\"1-0-control-plane-nbg1\"].var.swap_size",
          "status": "pass"
        },
        {
          "object_addr": "module.kube-hetzner.module.control_planes[\"2-0-control-plane-hel1\"].var.swap_size",
          "status": "pass"
        },
        {
          "object_addr": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"].var.swap_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.dns_servers",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.dns_servers",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.ingress_max_replica_count",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.ingress_max_replica_count",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.agent_nodepools",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.agent_nodepools",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.module.agents.var.swap_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.module.agents[\"0-0-agent-small\"].var.swap_size",
          "status": "pass"
        },
        {
          "object_addr": "module.kube-hetzner.module.agents[\"1-0-egress\"].var.swap_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.ssh_port",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.ssh_port",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.initial_k3s_channel",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.initial_k3s_channel",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.rancher_bootstrap_password",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.rancher_bootstrap_password",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.module.agents.var.zram_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.module.agents[\"0-0-agent-small\"].var.zram_size",
          "status": "pass"
        },
        {
          "object_addr": "module.kube-hetzner.module.agents[\"1-0-egress\"].var.zram_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.longhorn_fstype",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.longhorn_fstype",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.rancher_hostname",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.rancher_hostname",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.control_plane_nodepools",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.control_plane_nodepools",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cluster_autoscaler_stderr_threshold",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cluster_autoscaler_stderr_threshold",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cluster_name",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cluster_name",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.rancher_install_channel",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.rancher_install_channel",
          "status": "pass"
        }
      ]
    }
  ]
}
